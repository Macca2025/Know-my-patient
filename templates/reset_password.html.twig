{% extends 'layouts/base.html.twig' %}
{% block content %}

<div class="d-flex flex-column min-vh-100 section-gradient-light">
    <main class="flex-grow-1 d-flex justify-content-center align-items-center py-5 main-content">
        <div class="login-card bg-white rounded-4 p-4 p-lg-5 mt-5 mb-4 border-0 login-card-width">
            <style>
                @media (max-width: 576px) {
                    .login-card {
                        padding-left: 1.25rem !important;
                        padding-right: 1.25rem !important;
                    }
                }
                @media (max-width: 400px) {
                    .login-card {
                        padding-left: 0.5rem !important;
                        padding-right: 0.5rem !important;
                    }
                }
                .password-requirements {
                    font-size: 0.875rem;
                }
                .password-requirements li.valid {
                    color: #198754;
                }
                .password-requirements li.invalid {
                    color: #dc3545;
                }
            </style>

            <!-- Header -->
            <div class="text-center mb-4">
                <div class="login-logo-wrapper mb-4">
                    <img src="{{ companyLogo|default('images/logo.png') }}" alt="{{ app_name|default('Know My Patient') }}" class="login-logo">
                </div>
                <h2 class="login-title fw-bold mb-3 text-purple-primary">
                    <i class="bi bi-shield-lock me-2"></i>Reset Password
                </h2>
                <p class="login-subtitle text-muted">
                    Hello {{ first_name }}, enter your new password below.
                </p>
            </div>

            <!-- Flash Messages -->
            {% if session.flash_message %}
                <div class="alert alert-{{ session.flash_type|default('info') }} alert-dismissible fade show" role="alert">
                    {% if session.flash_type == 'success' %}
                        <i class="bi bi-check-circle me-2"></i>
                    {% elseif session.flash_type == 'danger' %}
                        <i class="bi bi-exclamation-triangle me-2"></i>
                    {% elseif session.flash_type == 'warning' %}
                        <i class="bi bi-exclamation-circle me-2"></i>
                    {% else %}
                        <i class="bi bi-info-circle me-2"></i>
                    {% endif %}
                    {{ session.flash_message }}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            {% endif %}

            <!-- Reset Password Form -->
            <form method="POST" action="/reset-password" class="needs-validation" novalidate id="resetPasswordForm">
                <input type="hidden" name="{{ csrf.keys.name }}" value="{{ csrf.name }}">
                <input type="hidden" name="{{ csrf.keys.value }}" value="{{ csrf.value }}">
                <input type="hidden" name="token" value="{{ token }}">

                <!-- Email Display (Read-only) -->
                <div class="mb-3">
                    <label class="form-label fw-bold">
                        <i class="bi bi-envelope me-1"></i>Email Address
                    </label>
                    <input 
                        type="email" 
                        class="form-control" 
                        value="{{ email }}" 
                        readonly
                        disabled
                    >
                </div>

                <!-- New Password Field -->
                <div class="mb-3">
                    <label for="password" class="form-label fw-bold">
                        <i class="bi bi-key me-1"></i>New Password
                    </label>
                    <div class="input-group">
                        <input 
                            type="password" 
                            class="form-control form-control-lg" 
                            id="password" 
                            name="password" 
                            placeholder="Enter new password"
                            required
                            minlength="8"
                            autofocus
                        >
                        <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                            <i class="bi bi-eye" id="togglePasswordIcon"></i>
                        </button>
                    </div>
                    <div class="invalid-feedback">
                        Password must be at least 8 characters long.
                    </div>
                </div>

                <!-- Confirm Password Field -->
                <div class="mb-3">
                    <label for="password_confirm" class="form-label fw-bold">
                        <i class="bi bi-key me-1"></i>Confirm New Password
                    </label>
                    <div class="input-group">
                        <input 
                            type="password" 
                            class="form-control form-control-lg" 
                            id="password_confirm" 
                            name="password_confirm" 
                            placeholder="Confirm new password"
                            required
                            minlength="8"
                        >
                        <button class="btn btn-outline-secondary" type="button" id="togglePasswordConfirm">
                            <i class="bi bi-eye" id="togglePasswordConfirmIcon"></i>
                        </button>
                    </div>
                    <div class="invalid-feedback" id="confirmPasswordFeedback">
                        Passwords must match.
                    </div>
                </div>

                <!-- Password Requirements -->
                <div class="alert alert-light border password-requirements mb-4">
                    <strong>Password Requirements:</strong>
                    <ul class="mb-0 mt-2">
                        <li id="req-length" class="invalid">
                            <i class="bi bi-x-circle me-1"></i>At least 8 characters
                        </li>
                        <li id="req-match" class="invalid">
                            <i class="bi bi-x-circle me-1"></i>Passwords match
                        </li>
                    </ul>
                </div>

                <!-- Submit Button -->
                <div class="d-grid mb-3">
                    <button type="submit" class="btn btn-primary btn-lg" id="submitBtn">
                        <i class="bi bi-shield-check me-2"></i>Reset Password
                    </button>
                </div>

                <!-- Back to Login -->
                <div class="text-center">
                    <a href="/login" class="text-decoration-none">
                        <i class="bi bi-arrow-left me-1"></i>Back to Login
                    </a>
                </div>
            </form>
        </div>
    </main>

    {% include 'layouts/footer.html.twig' %}
</div>

<!-- Password Validation & Toggle Scripts -->
<script>
    // Toggle password visibility
    document.getElementById('togglePassword').addEventListener('click', function() {
        const password = document.getElementById('password');
        const icon = document.getElementById('togglePasswordIcon');
        if (password.type === 'password') {
            password.type = 'text';
            icon.classList.remove('bi-eye');
            icon.classList.add('bi-eye-slash');
        } else {
            password.type = 'password';
            icon.classList.remove('bi-eye-slash');
            icon.classList.add('bi-eye');
        }
    });

    document.getElementById('togglePasswordConfirm').addEventListener('click', function() {
        const passwordConfirm = document.getElementById('password_confirm');
        const icon = document.getElementById('togglePasswordConfirmIcon');
        if (passwordConfirm.type === 'password') {
            passwordConfirm.type = 'text';
            icon.classList.remove('bi-eye');
            icon.classList.add('bi-eye-slash');
        } else {
            passwordConfirm.type = 'password';
            icon.classList.remove('bi-eye-slash');
            icon.classList.add('bi-eye');
        }
    });

    // Real-time password validation
    const password = document.getElementById('password');
    const passwordConfirm = document.getElementById('password_confirm');
    const reqLength = document.getElementById('req-length');
    const reqMatch = document.getElementById('req-match');
    const submitBtn = document.getElementById('submitBtn');

    function updateRequirement(element, isValid) {
        if (isValid) {
            element.classList.remove('invalid');
            element.classList.add('valid');
            element.querySelector('i').classList.remove('bi-x-circle');
            element.querySelector('i').classList.add('bi-check-circle');
        } else {
            element.classList.remove('valid');
            element.classList.add('invalid');
            element.querySelector('i').classList.remove('bi-check-circle');
            element.querySelector('i').classList.add('bi-x-circle');
        }
    }

    function validatePasswords() {
        const pwd = password.value;
        const pwdConfirm = passwordConfirm.value;

        // Check length
        const lengthValid = pwd.length >= 8;
        updateRequirement(reqLength, lengthValid);

        // Check match
        const matchValid = pwd.length > 0 && pwd === pwdConfirm;
        updateRequirement(reqMatch, matchValid);

        // Enable/disable submit button
        submitBtn.disabled = !(lengthValid && matchValid);
    }

    password.addEventListener('input', validatePasswords);
    passwordConfirm.addEventListener('input', validatePasswords);

    // Bootstrap form validation
    (function () {
        'use strict'
        var forms = document.querySelectorAll('.needs-validation')
        Array.prototype.slice.call(forms).forEach(function (form) {
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity() || password.value !== passwordConfirm.value) {
                    event.preventDefault()
                    event.stopPropagation()
                    if (password.value !== passwordConfirm.value) {
                        passwordConfirm.setCustomValidity('Passwords must match');
                    } else {
                        passwordConfirm.setCustomValidity('');
                    }
                }
                form.classList.add('was-validated')
            }, false)
        })
    })()
</script>

{% endblock %}
